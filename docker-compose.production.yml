services:
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_PASSWORD: postgres
      PGUSER: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5
    stop_grace_period: 0s
    volumes:
      - prodDB:/var/lib/postgresql/data

  backend:
    stop_grace_period: 0s
    environment:
      - DB_HOST=db
    depends_on:
      db:
        condition: service_healthy
    build:
      context: backend
      dockerfile: Dockerfile.production
    ports:
      - 4001:4001
    volumes:
      - ./backend/src:/app/src

  frontend:
    stop_grace_period: 0s
    build:
      context: frontend
      dockerfile: Dockerfile.production
    ports:
      - 3000:3000
    volumes:
      - ./frontend/src:/app/src

  upload-service:
    stop_grace_period: 0s
    build: file-upload-service
    ports:
      - 8001:8000
    volumes:
      - ./file-upload-service/files:/app/files

  nginx:
    stop_grace_period: 0s
    image: nginx:1.21.3
    restart: always
    ports:
      - ${GATEWAY_PORT:-8000}:80
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./logs:/var/log/nginx

volumes:
  prodDB: