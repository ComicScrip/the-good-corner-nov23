services:
  db:
    image: postgres:15-alpine
    stop_grace_period: 0s
    environment:
      POSTGRES_PASSWORD: ${DB_PASS-postgres}
      PGUSER: ${DB_USER-postgres}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 2s
      timeout: 5s
      retries: 10
    volumes:
      - prodDB:/var/lib/postgresql/data

  backend:
    stop_grace_period: 0s
    environment:
      DB_HOST: db
      DB_PASS: ${DB_PASS-postgres}
      DB_PORT: ${DB_PORT-5432}
      DB_USER: ${DB_USER-postgres}
      DB_NAME: ${DB_NAME-postgres}
      SERVER_PORT: ${SERVER_PORT-4001}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY:-changeme}
      NODE_ENV: ${NODE_ENV:-production}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS:-changeme}
      SMTP_HOST: ${SMTP_HOST:-in-v3.mailjet.com}
      SMTP_PORT: ${SMTP_PORT:-465}
      SMTP_USER: ${SMTP_USER:-95b8fc1eb0b19737c6eae68409c31952}
      SMTP_PASS: ${SMTP_PASS:-api-key}
      EMAIL_FROM: ${EMAIL_FROM:-contact@app.com}
      FRONTEND_URL: ${FRONTEND_URL:-http://localhost:3000}
    depends_on:
      db:
        condition: service_healthy
    image: scrip/the-good-corner-nov23-back

  frontend:
    environment:
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY:-changeme}
    stop_grace_period: 0s
    image: scrip/the-good-corner-nov23-front

  upload-service:
    environment:
      - HOST=/
    stop_grace_period: 0s
    image: scrip/file-upload-service
    volumes:
      - prodUploads:/app/files

  gateway:
    restart: always
    stop_grace_period: 0s
    build:
      context: gateway
      dockerfile: Dockerfile.production
    ports:
      - ${GATEWAY_PORT-80}:80

  discord-notifier:
    image: scrip/discord-notifier
    depends_on:
      gateway:
        condition: service_started
    environment:
      - BOT_TOKEN=${BOT_TOKEN:-}
      - CHANNEL_ID=${CHANNEL_ID:-}
    command: "npm run send-message 'production env has been updated : https://pierre.wns.wilders.dev'"

volumes:
  prodDB:
  prodUploads:
